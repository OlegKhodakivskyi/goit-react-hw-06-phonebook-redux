{"version":3,"sources":["Components/Alert/Alert.module.css","Components/App.module.css","Components/Contacts/ContactFormList/ContactList.module.css","Components/Contacts/ContactFormList/ContactFormListItem/ContactFormListItem.module.css","redux/phoneBookActions/phoneBookActionTypes.js","redux/phoneBookActions/phoneBookActions.js","Components/Contacts/ContactForm.jsx","Components/Contacts/ContactFormList/ContactFormListItem/ContactFormListItem.jsx","Components/Contacts/ContactFormList/ContactFormList.jsx","Components/Filter/Filter.jsx","Components/Alert/Alert.jsx","Components/App.js","redux/phoneBookActions/phoneBookReducers.js","redux/store.js","index.js"],"names":["module","exports","addContact","name","number","type","phoneBookActionsTypes","payload","id","uuidv4","deleteContact","filter","console","log","duplicate","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","duplicateFn","props","onAlert","setTimeout","onAddContact","contacts","some","toLowerCase","this","onSubmit","htmlFor","onChange","Component","mapDispatchToProps","phoneBookActions","connect","items","ContactFormListItem","onRemove","key","className","css","contactListItem","onClick","onRemoveContact","contact","includes","TransitionGroup","component","styles","contactList","map","CSSTransition","timeout","classNames","unmountOnExit","onChangeFilter","Alert","alertWrapper","App","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","alert","stylesAlert","in","appear","sectionTitle","contactListTitle","alertSwitch","combineReducers","rootReducer","phoneBookReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b700cd8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Alert_appear__3Hpbh\",\"appearActive\":\"Alert_appearActive__2Id2C\",\"alertWrapper\":\"Alert_alertWrapper__1LBkQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"App_sectionTitle__3fjhO\",\"contactListTitle\":\"App_contactListTitle__zUCMP\",\"appear\":\"App_appear__1Zhke\",\"appearActive\":\"App_appearActive__1Qmy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__D_1UB\",\"enter\":\"ContactList_enter__3I6-T\",\"enterActive\":\"ContactList_enterActive__Lm-aT\",\"exit\":\"ContactList_exit__q09OL\",\"exitActive\":\"ContactList_exitActive__ijObg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactFormListItem_contactListItem__27ZYU\"};","const ADD = \"contacts/add\";\r\nconst DEL = \"contacts/del\";\r\nconst FILTER = \"contacts/filter\";\r\nconst DUPLICATE = \"contacts/duplicate\";\r\n\r\nexport default { ADD, DEL, FILTER, DUPLICATE };\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport phoneBookActionsTypes from \"./phoneBookActionTypes\";\r\n\r\nconst addContact = ({ name, number }) => ({\r\n  type: phoneBookActionsTypes.ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = ( id ) => ({\r\n  type: phoneBookActionsTypes.DEL,\r\n  payload: {\r\n    id,\r\n  },\r\n});\r\n\r\nconst filter = (filter) => {\r\n  console.log(filter);\r\n  return {\r\n    type: phoneBookActionsTypes.FILTER,\r\n    payload: {\r\n      filter,\r\n    },\r\n  };\r\n};\r\n\r\nconst duplicate = () => ({\r\n  type: phoneBookActionsTypes.DUPLICATE,\r\n});\r\n\r\nexport default { addContact, deleteContact, filter, duplicate };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions/phoneBookActions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.duplicateFn()) {\r\n      this.props.onAlert();\r\n      setTimeout(() => {\r\n        this.props.onAlert();\r\n      }, 1500);\r\n    } else {\r\n      this.props.onAddContact({ ...this.state });\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n\r\n  duplicateFn = () => {\r\n    return this.props.contacts.some(\r\n      (contacts) =>\r\n        contacts.name.toLowerCase() === this.state.name.toLowerCase()\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"Name\">\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Number:\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\"> Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: phoneBookActions.addContact,\r\n  onAlert: phoneBookActions.duplicate,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  number: PropTypes.number,\r\n  name: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport css from \"./ContactFormListItem.module.css\";\r\n\r\nconst ContactFormListItem = ({ id, name, number, onRemove }) => (\r\n  <>\r\n    <li key={id} className={css.contactListItem}>\r\n      <p> {name} : </p>\r\n      <p> {number} </p>\r\n      <button type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  </>\r\n);\r\n\r\nexport default ContactFormListItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookActions from \"../../../redux/phoneBookActions/phoneBookActions\";\r\nimport ContactFormListItem from \"./ContactFormListItem/ContactFormListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactFormList = ({ contacts, onRemoveContact }) => (\r\n  <>\r\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition\r\n          key={id}\r\n          timeout={1000}\r\n          classNames={styles}\r\n          unmountOnExit\r\n        >\r\n          <ContactFormListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onRemove={() => onRemoveContact(id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.filter\r\n      ? state.contacts.items.filter((contact) =>\r\n          contact.name\r\n            .toLowerCase()\r\n            .includes(state.contacts.filter.toLowerCase())\r\n        )\r\n      : state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: phoneBookActions.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFormList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookActions from \"../../redux/phoneBookActions/phoneBookActions\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <label>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => {\r\n          // console.log(e.target.value);\r\n          onChangeFilter(e.target.value);\r\n        }}\r\n      />\r\n    </label>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: phoneBookActions.filter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = () => {\r\n  return (\r\n    <div className={styles.alertWrapper}>\r\n      <p>Contact already exist !</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactForm from \"./Contacts/ContactForm\";\r\nimport ContactFormList from \"./Contacts/ContactFormList/ContactFormList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport styles from \"./App.module.css\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport stylesAlert from \"./Alert/Alert.module.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    // console.log(\"DidMount\");\r\n    const persistedContacts = localStorage.getItem(\"contacts\");\r\n    // console.log(JSON.parse(persistedContacts));\r\n    if (persistedContacts) {\r\n      this.setState({ contacts: JSON.parse(persistedContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // console.log(\"Did Update\");\r\n    // console.log(\"prevState\", prevState);\r\n    // console.log(\"this.state\", this.state);\r\n\r\n    if (prevProps.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { alert } = this.props;\r\n    return (\r\n      <>\r\n        {/* ----------- ALert ----- */}\r\n        {alert && (\r\n          <CSSTransition\r\n            classNames={stylesAlert}\r\n            in={true}\r\n            appear={true}\r\n            timeout={1500}\r\n            unmountOnExit\r\n          >\r\n            <Alert alert={alert} />\r\n          </CSSTransition>\r\n        )}\r\n\r\n        {/* ----------- Phonebook ----- */}\r\n\r\n        <CSSTransition\r\n          classNames={styles}\r\n          in={true}\r\n          appear={true}\r\n          timeout={1500}\r\n          unmountOnExit\r\n        >\r\n          <h1 className={styles.sectionTitle}>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        {/* ----------- Contact FORM ----- */}\r\n\r\n        <ContactForm />\r\n        <h2 className={styles.contactListTitle}>Contacts</h2>\r\n        <Filter />\r\n        <ContactFormList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state.contacts.alertSwitch);\r\n  return {\r\n    alert: state.contacts.alertSwitch,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBookActionsTypes from \"./phoneBookActionTypes\";\r\n\r\nconst items = (\r\n  state = [\r\n    {\r\n      id: \"id-1\",\r\n      name: \"Rosie Simpson\",\r\n      number: \"459-12-56\",\r\n    },\r\n    {\r\n      id: \"id-2\",\r\n      name: \"Hermione Kline\",\r\n      number: \"443-89-12\",\r\n    },\r\n    {\r\n      id: \"id-3\",\r\n      name: \"Eden Clements\",\r\n      number: \"645-17-79\",\r\n    },\r\n    {\r\n      id: \"id-4\",\r\n      name: \"Annie Copeland\",\r\n      number: \"227-91-26\",\r\n    },\r\n  ],\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case phoneBookActionsTypes.ADD:\r\n      return [...state, payload];\r\n\r\n    case phoneBookActionsTypes.DEL:\r\n      console.log(items);\r\n      return state.filter((contacts) => contacts.id !== payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case phoneBookActionsTypes.FILTER:\r\n      // console.log(\"t\");\r\n      return payload.filter;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst alertSwitch = (state = false, { type, payload }) => {\r\n  switch (type) {\r\n    case phoneBookActionsTypes.DUPLICATE:\r\n      return !state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter, alertSwitch });\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport phoneBookReducers from \"./phoneBookActions/phoneBookReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneBookReducers,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}